-------------------------------------------------------------------------------
-- ACCOUNT STUFF
-------------------------------------------------------------------------------
CREATE TABLE ACCOUNT
( ID INTEGER PRIMARY KEY
, USERNAME VARCHAR2(60)
, PASSWORD CHAR(128)
, BIRTHDAY DATE
, UNITID INTEGER
, GENDERID INTEGER
, LAST_LOGIN DATE
, ACTIVE_SINCE DATE
, CONSTRAINT FK_UNITID FOREIGN KEY(UNITID) REFERENCES UNIT_SYSTEM(ID)
, CONSTRAINT FK_GENDERID FOREIGN KEY (GENDERID) REFERENCES GENDER(ID)
);

CREATE TABLE TEMP_ACCOUNT
( ID INTEGER PRIMARY KEY
, USERNAME VARCHAR2(60)
, PASSWORD CHAR(128)
, CODE     CHAR(32)
, CREATED  DATE
);

CREATE TABLE ACCOUNT_SETTINGS
( ID INTEGER PRIMARY KEY
, ACCOUNTID INTEGER
, RECALCID INTEGER
, MULTIPLIERID INTEGER
, HEIGHT NUMBER
, DATE_CHANGED DATE
, CONSTRAINT FK_ACCOUNTID FOREIGN KEY(ACCOUNTID) REFERENCES ACCOUNT(ID)
, CONSTRAINT FK_RECALCID FOREIGN KEY(RECALCID) REFERENCES RECALC(ID)
, CONSTRAINT FK_MULTIPLIERID FOREIGN KEY(MULTIPLIERID) REFERENCES MULTIPLIER(ID)
);

-------------------------------------------------------------------------------
-- INGREDIENT STUFF
-------------------------------------------------------------------------------

CREATE TABLE BRAND
( ID INTEGER PRIMARY KEY
, NAME VARCHAR2(40)
);

CREATE TABLE CATEGORY
( ID INTEGER PRIMARY KEY
, NAME VARCHAR2(20)
);

CREATE TABLE UNIT
( ID INTEGER PRIMARY KEY
, NAME VARCHAR2(15)
, SHORT_NAME VARCHAR2(8)
);

CREATE TABLE INGREDIENT
( ID INTEGER PRIMARY KEY
, NAME VARCHAR2(128)
, BRANDID INTEGER
, CATEGORYID INTEGER
, SERVING_SIZE NUMBER(6,3)
, SERVING_UNIT INTEGER
, ALT_SERVING_SIZE NUMBER(6,3)
, ALT_SERVING_UNIT INTEGER
, CALORIES NUMBER(6)
, FAT NUMBER(6)
, CARBS NUMBER(6)
, PROTEIN NUMBER(6)
, CONSTRAINT FK_BRANDID FOREIGN KEY(BRANDID) REFERENCES BRAND(ID)
, CONSTRAINT FK_CATEGORYID FOREIGN KEY(CATEGORYID) REFERENCES CATEGORY(ID)
, CONSTRAINT FK_SERVING_UNIT FOREIGN KEY(SERVING_UNIT) REFERENCES UNIT(ID)
, CONSTRAINT FK_ALT_SERVING_UNIT FOREIGN KEY(ALT_SERVING_UNIT) REFERENCES UNIT(ID)
);