CREATE TABLE INGREDIENT
( ID INTEGER PRIMARY KEY
, NAME VARCHAR2(128)
, BRANDID INTEGER
, CATEGORYID INTEGER
, SERVING_SIZE NUMBER(6,3)
, SERVING_UNIT INTEGER
, ALT_SERVING_SIZE NUMBER(6,3)
, ALT_SERVING_UNIT INTEGER
, CALORIES NUMBER(6,2)
, FAT NUMBER(6,2)
, CARBS NUMBER(6,2)
, PROTEIN NUMBER(6,2)
, CONSTRAINT FK_BRANDID FOREIGN KEY(BRANDID) REFERENCES BRAND(ID)
, CONSTRAINT FK_CATEGORYID FOREIGN KEY(CATEGORYID) REFERENCES CATEGORY(ID)
, CONSTRAINT FK_SERVING_UNIT FOREIGN KEY(SERVING_UNIT) REFERENCES UNIT(ID)
, CONSTRAINT FK_ALT_SERVING_UNIT FOREIGN KEY(ALT_SERVING_UNIT) REFERENCES UNIT(ID)
);


----------------------------------
-- VIEW FOR LATEST INGREDIENT
CREATE OR REPLACE VIEW INGREDIENT_VIEW AS
  SELECT I.ID,
         I.NAME INGREDIENT_NAME,
         B.NAME BRAND_NAME,
         C.NAME CATEGORY_NAME,
         SERVING_SIZE,
         U.NAME SERVING_UNIT,
         U.SHORT_NAME SERVING_UNIT_SHORT,
         ALT_SERVING_SIZE,
         U2.NAME ALT_SERVING_UNIT,
         U2.SHORT_NAME ALT_SERVING_UNIT_SHORT,
         CALORIES,
         FAT,
         CARBS,
         PROTEIN
  FROM INGREDIENT I
  INNER JOIN BRAND B ON (I.BRANDID = B.ID)
  INNER JOIN CATEGORY C ON (I.CATEGORYID = C.ID)
  INNER JOIN UNIT U ON (I.SERVING_UNIT = U.ID)
  INNER JOIN UNIT U2 ON (I.ALT_SERVING_UNIT = U2.ID)
  ORDER BY ID;

CREATE SEQUENCE SEQ_INGREDIENTID
START WITH 0
MINVALUE 0
INCREMENT BY 1
CACHE 20
NOCYCLE;

-------------------------------------------------------------------------------
-- INGREDIENT PROCEDURES
-------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE INGREDIENT_INSERT
( PNAME IN INGREDIENT.NAME%TYPE
, PBRAND IN INGREDIENT.BRANDID%TYPE
, PCATG IN INGREDIENT.CATEGORYID%TYPE
, PSERV_SIZE IN INGREDIENT.SERVING_SIZE%TYPE
, PSERV_UNIT IN INGREDIENT.SERVING_UNIT%TYPE
, PALT_SERV_SIZE IN INGREDIENT.ALT_SERVING_SIZE%TYPE
, PALT_SERV_UNIT IN INGREDIENT.ALT_SERVING_UNIT%TYPE
, PCAL IN INGREDIENT.CALORIES%TYPE
, PFAT IN INGREDIENT.FAT%TYPE
, PCARB IN INGREDIENT.CARBS%TYPE
, PPROT IN INGREDIENT.PROTEIN%TYPE
)
IS
BEGIN
  INSERT INTO INGREDIENT(ID, NAME, BRANDID, CATEGORYID, SERVING_UNIT, SERVING_SIZE, ALT_SERVING_UNIT, ALT_SERVING_SIZE, CALORIES, FAT, CARBS, PROTEIN)
  VALUES(SEQ_INGREDIENTID.NEXTVAL, PNAME, PBRAND, PCATG, PSERV_UNIT, PSERV_SIZE, PALT_SERV_UNIT, PALT_SERV_SIZE, PCAL, PFAT, PCARB, PPROT);
  COMMIT;
  
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
END;
/

CREATE OR REPLACE PROCEDURE INGREDIENT_INSERT_NONID
( PNAME IN INGREDIENT.NAME%TYPE
, PBRAND IN BRAND.NAME%TYPE
, PCATG IN CATEGORY.NAME%TYPE
, PSERV_SIZE IN INGREDIENT.SERVING_SIZE%TYPE
, PSERV_UNIT IN UNIT.NAME%TYPE
, PALT_SERV_SIZE IN INGREDIENT.ALT_SERVING_SIZE%TYPE
, PALT_SERV_UNIT IN UNIT.NAME%TYPE
, PCAL IN INGREDIENT.CALORIES%TYPE
, PFAT IN INGREDIENT.FAT%TYPE
, PCARB IN INGREDIENT.CARBS%TYPE
, PPROT IN INGREDIENT.PROTEIN%TYPE
)
IS
  IBID INTEGER;
  ICID INTEGER;
  ISERV INTEGER;
  ISERV2 INTEGER;
BEGIN
  SELECT ID INTO IBID FROM BRAND WHERE UPPER(NAME)=UPPER(PBRAND);
  SELECT ID INTO ICID FROM CATEGORY WHERE UPPER(NAME)=UPPER(PCATG);
  SELECT ID INTO ISERV FROM UNIT WHERE UPPER(NAME)=UPPER(PSERV_UNIT);
  SELECT ID INTO ISERV2 FROM UNIT WHERE UPPER(NAME)=UPPER(PALT_SERV_UNIT);
  INGREDIENT_INSERT(PNAME, IBID, ICID, ISERV, PSERV_SIZE, ISERV2, PALT_SERV_SIZE, PCAL, PFAT, PCARB, PPROT);
  
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
END;
/

CREATE OR REPLACE PROCEDURE INGREDIENT_GET_BYID
( PID IN INGREDIENT.ID%TYPE
, PCURSOR OUT SYS_REFCURSOR
)
IS
BEGIN
  OPEN PCURSOR FOR
    SELECT * FROM INGREDIENT WHERE ID=PID;
END;
/

CREATE OR REPLACE PROCEDURE INGREDIENT_GETALL(PCURSOR OUT SYS_REFCURSOR)
IS
BEGIN
  OPEN PCURSOR FOR 
    SELECT * FROM INGREDIENT;
END;
/


CREATE OR REPLACE PROCEDURE INGREDIENT_VIEW_GETALL(PCURSOR OUT SYS_REFCURSOR)
IS
BEGIN
  OPEN PCURSOR FOR
    SELECT * FROM INGREDIENT_VIEW;
END;
/

CREATE OR REPLACE PROCEDURE INGREDIENT_VIEW_FILTERBY
( PCATEGORY IN VARCHAR2
, PBRAND IN VARCHAR2
, PCURSOR OUT SYS_REFCURSOR
)
IS
BEGIN
  IF UPPER(PCATEGORY) != 'ALL' AND UPPER(PBRAND) != 'ALL' THEN
    OPEN PCURSOR FOR
      SELECT * FROM INGREDIENT_VIEW WHERE UPPER(CATEGORY_NAME)=UPPER(PCATEGORY) AND UPPER(BRAND_NAME)=UPPER(PBRAND);
  ELSIF UPPER(PCATEGORY) != 'ALL' THEN
    OPEN PCURSOR FOR
      SELECT * FROM INGREDIENT_VIEW WHERE UPPER(CATEGORY_NAME)=UPPER(PCATEGORY);
  ELSIF UPPER(PBRAND) != 'ALL' THEN
    OPEN PCURSOR FOR
      SELECT * FROM INGREDIENT_VIEW WHERE UPPER(BRAND_NAME)=UPPER(PBRAND);
  ELSE
    OPEN PCURSOR FOR
      SELECT * FROM INGREDIENT_VIEW;
  END IF;
END;
/



---
EXEC INGREDIENT_INSERT('Chicken Breast', 3, 1, 4, 3, 112, 1, 140, 4, 0, 25);
EXEC INGREDIENT_INSERT('Brown Rice', 4, 3, 43, 1, 0.5, 5, 150, 1, 32, 3);