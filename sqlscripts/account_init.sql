CREATE TABLE ACCOUNT
( ID INTEGER NOT NULL
, USERNAME VARCHAR2(60) NOT NULL
, PASSWORD CHAR(128) NOT NULL
, BIRTHDAY DATE
, UNIT VARCHAR2(8)
, GENDER VARCHAR2(7)
, LAST_LOGIN DATE
, ACTIVE_SINCE DATE
, CONSTRAINT PK_ACCOUNT_ID PRIMARY KEY (ID)
, CONSTRAINT FK_UNIT FOREIGN KEY(UNIT) REFERENCES UNIT_SYSTEM(NAME)
, CONSTRAINT FK_GENDER FOREIGN KEY (GENDER) REFERENCES GENDER(NAME)
, CONSTRAINT UNIQUE_ACCOUNT_USERNAME UNIQUE(USERNAME)
);

CREATE OR REPLACE VIEW ACCOUNT_VIEW AS
  SELECT ACT.ID, USERNAME, BIRTHDAY, GENDER, UNIT, ACTIVE_SINCE, HEIGHT, MULTIPLIER, WEEKDAY
  FROM ACCOUNT ACT
  JOIN ACCOUNT_SETTING ACTS ON ACT.ID = ACTS.ACCOUNTID
WITH READ ONLY;

CREATE SEQUENCE SEQ_ACCOUNTID
START WITH 0
MINVALUE 0
INCREMENT BY 1
CACHE 20
NOCYCLE;

-------------------------------------------------------------------------------
-- ACCOUNT PROCEDURES
-------------------------------------------------------------------------------
CREATE OR REPLACE PACKAGE ACCOUNT_PKG AS
  -- Creates a new account
  PROCEDURE NEW( PUSER IN ACCOUNT.USERNAME%TYPE
               , PPASS IN ACCOUNT.PASSWORD%TYPE
               , PID IN ACCOUNT.ID%TYPE DEFAULT SEQ_ACCOUNTID.NEXTVAL
               );
  
  -- Creates a new account from a temp account
  PROCEDURE CREATEFROMTEMP(PTEMPID IN TEMP_ACCOUNT.ID%TYPE);
  
  -- Retrieves a SYS_REFCURSOR for all the accounts
  PROCEDURE GET(PCURSOR OUT SYS_REFCURSOR);
  
  -- Retrieves a SYS_REFCURSOR for an account by account id
  PROCEDURE GET( PID IN ACCOUNT.ID%TYPE
               , PCURSOR OUT SYS_REFCURSOR
               );
  
  -- Retrives a SYS_REFCURSOR for an account (ONLY)password by username
  PROCEDURE GET( PUSER IN ACCOUNT.USERNAME%TYPE
               , PCURSOR OUT SYS_REFCURSOR
               );
  
  -- Retrieves a SYS_REFCURSOR for an account and account_setting
  PROCEDURE GETFROMVIEW( PID IN ACCOUNT.ID%TYPE, PCURSOR OUT SYS_REFCURSOR);
  
  -- Updates the last login to the time of login (SYSDATE) by account id
  PROCEDURE UPDATELASTLOGIN(PID IN ACCOUNT.ID%TYPE);
  
  -- Updates the account details for an account id
  PROCEDURE UPDATEACCOUNT( PID IN ACCOUNT.ID%TYPE
                         , PGENDER IN ACCOUNT.GENDER%TYPE
                         , PUNITSYSTEM IN ACCOUNT.UNIT%TYPE
                         , PBIRTHDAY IN ACCOUNT.BIRTHDAY%TYPE
                         );
  
END ACCOUNT_PKG;
/

CREATE OR REPLACE PACKAGE BODY ACCOUNT_PKG AS
  PROCEDURE NEW(PUSER IN ACCOUNT.USERNAME%TYPE, PPASS IN ACCOUNT.PASSWORD%TYPE, PID IN ACCOUNT.ID%TYPE DEFAULT SEQ_ACCOUNTID.NEXTVAL) IS
  BEGIN
    INSERT INTO ACCOUNT(ID, USERNAME, PASSWORD, BIRTHDAY, UNIT, GENDER, LAST_LOGIN, ACTIVE_SINCE)
    VALUES(PID, PUSER, PPASS, NULL, NULL, NULL, SYSDATE, SYSDATE);
    COMMIT;
    
    EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
  END NEW;
  
  PROCEDURE CREATEFROMTEMP( PTEMPID IN TEMP_ACCOUNT.ID%TYPE )
  IS
    IUSERNAME TEMP_ACCOUNT.USERNAME%TYPE;
    IPASSWORD TEMP_ACCOUNT.PASSWORD%TYPE;
    IID INTEGER;
  BEGIN
    SELECT USERNAME, PASSWORD INTO IUSERNAME, IPASSWORD FROM TEMP_ACCOUNT WHERE ID=PTEMPID;
    NEW(IUSERNAME, IPASSWORD);
    TEMP_ACCOUNT_PKG.DEL(PTEMPID);
    SELECT ID INTO IID FROM ACCOUNT WHERE USERNAME=IUSERNAME AND PASSWORD=IPASSWORD;
    ACCOUNT_SETTING_PKG.NEW(IID, NULL, NULL, NULL);
    COMMIT;
    
    EXCEPTION
      WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
  END CREATEFROMTEMP;

  PROCEDURE GET(PCURSOR OUT SYS_REFCURSOR)
  IS
  BEGIN
    OPEN PCURSOR FOR
      SELECT *
      FROM ACCOUNT
      ORDER BY ID;
  END GET;
  
  PROCEDURE GET(PID IN ACCOUNT.ID%TYPE, PCURSOR OUT SYS_REFCURSOR) IS
  BEGIN
    OPEN PCURSOR FOR
      SELECT *
      FROM ACCOUNT
      WHERE ID=PID;
  END GET;
  
  PROCEDURE GET(PUSER IN ACCOUNT.USERNAME%TYPE, PCURSOR OUT SYS_REFCURSOR) IS
  BEGIN
    OPEN PCURSOR FOR
      SELECT ID, PASSWORD
      FROM ACCOUNT
      WHERE USERNAME=PUSER;
  END GET;
  
  PROCEDURE GETFROMVIEW(PID IN ACCOUNT.ID%TYPE, PCURSOR OUT SYS_REFCURSOR)
  IS
  BEGIN
    OPEN PCURSOR FOR
      SELECT *
      FROM ACCOUNT_VIEW;
  END GETFROMVIEW;
  
  PROCEDURE UPDATELASTLOGIN(PID IN ACCOUNT.ID%TYPE) IS
  BEGIN
    UPDATE ACCOUNT
    SET LAST_LOGIN=SYSDATE
    WHERE ID=PID;
    COMMIT;
    
    EXCEPTION
      WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
    END UPDATELASTLOGIN;
  
  PROCEDURE UPDATEACCOUNT( PID IN ACCOUNT.ID%TYPE
                         , PGENDER IN ACCOUNT.GENDER%TYPE
                         , PUNITSYSTEM IN ACCOUNT.UNIT%TYPE
                         , PBIRTHDAY IN ACCOUNT.BIRTHDAY%TYPE
                         ) IS
  BEGIN
    UPDATE ACCOUNT
    SET GENDER=UPPER(PGENDER),
        UNIT=UPPER(PUNITSYSTEM),
        BIRTHDAY=PBIRTHDAY
    WHERE ID=PID;
    COMMIT;
    
    EXCEPTION
      WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
  END UPDATEACCOUNT;
END ACCOUNT_PKG;
/
