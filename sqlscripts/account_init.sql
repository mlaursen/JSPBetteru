CREATE TABLE ACCOUNT
( ID INTEGER PRIMARY KEY
, USERNAME VARCHAR2(60)
, PASSWORD CHAR(128)
, BIRTHDAY DATE
, UNITID INTEGER
, GENDERID INTEGER
, LAST_LOGIN DATE
, ACTIVE_SINCE DATE
, CONSTRAINT FK_UNITID FOREIGN KEY(UNITID) REFERENCES UNIT_SYSTEM(ID)
, CONSTRAINT FK_GENDERID FOREIGN KEY (GENDERID) REFERENCES GENDER(ID)
);

CREATE OR REPLACE VIEW ACCOUNT_VIEW AS
  SELECT ACT.ID, USERNAME, BIRTHDAY, G.NAME GENDER, US.NAME UNIT_SYSTEM, ACTIVE_SINCE, HEIGHT, M.NAME MULTIPLIER, M.AMOUNT MULTIPLIER_AMT, R.NAME RECALC
  FROM ACCOUNT ACT
  JOIN ACCOUNT_SETTING_VIEW ASV ON ACT.ID = ASV.ACCOUNTID
  JOIN UNIT_SYSTEM US ON UNITID=US.ID
  JOIN GENDER G ON GENDERID=G.ID
  JOIN RECALC R ON RECALCID=R.ID
  JOIN MULTIPLIER M ON MULTIPLIERID=M.ID;

CREATE SEQUENCE SEQ_ACCOUNTID
START WITH 0
MINVALUE 0
INCREMENT BY 1
CACHE 20
NOCYCLE;

-------------------------------------------------------------------------------
-- ACCOUNT PROCEDURES
-------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE ACCOUNT_INSERT
( PUSER IN ACCOUNT.USERNAME%TYPE
, PPASS IN ACCOUNT.PASSWORD%TYPE
, PID IN ACCOUNT.ID%TYPE DEFAULT SEQ_ACCOUNTID.NEXTVAL
)
IS
BEGIN
  INSERT INTO ACCOUNT(ID, USERNAME, PASSWORD, BIRTHDAY, UNITID, GENDERID, LAST_LOGIN, ACTIVE_SINCE)
  VALUES(PID, PUSER, PPASS, TO_DATE('01/01/1950', 'mm/dd/yyyy'), 1, 1, SYSDATE, SYSDATE);
  ACCOUNT_SETTING_INIT(PID);
  COMMIT;
  
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
END;
/


CREATE OR REPLACE PROCEDURE ACCOUNT_INSERT_FROM_TEMP( PTEMPID IN INTEGER )
IS
  IUSERNAME TEMP_ACCOUNT.USERNAME%TYPE;
  IPASSWORD TEMP_ACCOUNT.PASSWORD%TYPE;
BEGIN
  SELECT USERNAME, PASSWORD INTO IUSERNAME, IPASSWORD FROM TEMP_ACCOUNT WHERE ID=PTEMPID;
  ACCOUNT_INSERT(IUSERNAME, IPASSWORD);
  TEMP_ACCOUNT_DELETE_BYID(PTEMPID);
  COMMIT;
  
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
END;
/

CREATE OR REPLACE PROCEDURE ACCOUNT_GETALL(PCURSOR OUT SYS_REFCURSOR)
IS
BEGIN
  OPEN PCURSOR FOR
    SELECT * FROM ACCOUNT ORDER BY ID;
END;
/


CREATE OR REPLACE PROCEDURE ACCOUNT_GET_BYID
( PID IN ACCOUNT.ID%TYPE
, PCURSOR OUT SYS_REFCURSOR
)
IS
BEGIN
  OPEN PCURSOR FOR
    SELECT ID, USERNAME, PASSWORD, BIRTHDAY, UNITID, GENDERID, LAST_LOGIN, ACTIVE_SINCE
    FROM ACCOUNT
    WHERE ID=PID;
END;
/

CREATE OR REPLACE PROCEDURE ACCOUNT_GETIDPASS_BYUSER
( PUSERNAME IN ACCOUNT.USERNAME%TYPE
, PCURSOR OUT SYS_REFCURSOR
)
IS
BEGIN
  OPEN PCURSOR FOR
    SELECT ID, PASSWORD FROM ACCOUNT WHERE USERNAME=PUSERNAME;
END;
/

CREATE OR REPLACE PROCEDURE ACCOUNT_UPDATE_BYID
( PID IN ACCOUNT.ID%TYPE
, PGID IN ACCOUNT.GENDERID%TYPE
, PUID IN ACCOUNT.UNITID%TYPE
, PBIRTHDAY IN ACCOUNT.BIRTHDAY%TYPE
)
IS
BEGIN
  UPDATE ACCOUNT
  SET GENDERID=PGID,
      UNITID=PUID,
      BIRTHDAY=PBIRTHDAY
  WHERE ID=PID;
  COMMIT;
  
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
END;
/
      

CREATE OR REPLACE PROCEDURE ACCOUNT_UPDATE_LASTLOGIN( PID IN ACCOUNT.ID%TYPE )
IS
BEGIN
  UPDATE ACCOUNT
  SET LAST_LOGIN=SYSDATE
  WHERE ID=PID;
  COMMIT;
  
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
END;
/

CREATE OR REPLACE PROCEDURE ACCOUNT_VIEW_GET_BYID
( PID IN INTEGER
, PCURSOR OUT SYS_REFCURSOR
)
IS
BEGIN
  OPEN PCURSOR FOR
    SELECT * FROM ACCOUNT_VIEW WHERE ID=PID;
END;
/
