CREATE TABLE TEMP_ACCOUNT
( ID INTEGER
, USERNAME VARCHAR2(60)
, PASSWORD CHAR(128)
, CODE     CHAR(32)
, CREATED  DATE
, CONSTRAINT PK_TEMP_ACCOUNT_ID PRIMARY KEY (ID)
);



CREATE SEQUENCE SEQ_TEMP_ACCOUNTID
START WITH 0
MINVALUE 0
INCREMENT BY 1
CACHE 20
NOCYCLE;

-------------------------------------------------------------------------------
-- TEMP_ACCOUNT PROCEDURES
-------------------------------------------------------------------------------
CREATE OR REPLACE PACKAGE TEMP_ACCOUNT_PKG AS
  -- creates a new temp account
  PROCEDURE NEW( PUSER IN TEMP_ACCOUNT.USERNAME%TYPE
               , PPASS IN TEMP_ACCOUNT.PASSWORD%TYPE
               , PCODE IN TEMP_ACCOUNT.CODE%TYPE
               , PID   IN TEMP_ACCOUNT.ID%TYPE DEFAULT SEQ_TEMP_ACCOUNTID.NEXTVAL
               );
  
  -- Deletes a temp account by id
  PROCEDURE DEL(PID IN TEMP_ACCOUNT.ID%TYPE);
  
  -- Returns a sys_refcursor for all temp accounts
  PROCEDURE GET(PCURSOR OUT SYS_REFCURSOR);
  
  -- Returns a sys_refcursor for a temp account by tempaccountid
  PROCEDURE GET(PID IN TEMP_ACCOUNT.ID%TYPE, PCURSOR OUT SYS_REFCURSOR);
  
END TEMP_ACCOUNT_PKG;
/

CREATE OR REPLACE PACKAGE BODY TEMP_ACCOUNT_PKG AS
  PROCEDURE NEW( PUSER IN TEMP_ACCOUNT.USERNAME%TYPE
               , PPASS IN TEMP_ACCOUNT.PASSWORD%TYPE
               , PCODE IN TEMP_ACCOUNT.CODE%TYPE
               , PID   IN TEMP_ACCOUNT.ID%TYPE DEFAULT SEQ_TEMP_ACCOUNTID.NEXTVAL
               )
  IS
  BEGIN
    INSERT INTO TEMP_ACCOUNT(ID, USERNAME, PASSWORD, CODE, CREATED)
    VALUES(PID, PUSER, PPASS, PCODE, SYSDATE);
    COMMIT;
    
    EXCEPTION
      WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
  END NEW;
  
  PROCEDURE DEL(PID IN TEMP_ACCOUNT.ID%TYPE)
  IS
  BEGIN
    DELETE FROM TEMP_ACCOUNT
    WHERE ID=PID;
    COMMIT;
    
    EXCEPTION
      WHEN OTHERS THEN
        ROLLBACK;
  END DEL;
  
  PROCEDURE GET(PCURSOR OUT SYS_REFCURSOR)
  IS
  BEGIN
    OPEN PCURSOR FOR
      SELECT *
      FROM TEMP_ACCOUNT;
  END GET;
  
  PROCEDURE GET(PID IN TEMP_ACCOUNT.ID%TYPE, PCURSOR OUT SYS_REFCURSOR)
  IS
  BEGIN
    OPEN PCURSOR FOR
      SELECT ID, USERNAME, PASSWORD, CODE
      FROM TEMP_ACCOUNT
      WHERE ID=PID;
  END GET;
  
END TEMP_ACCOUNT_PKG;
/
